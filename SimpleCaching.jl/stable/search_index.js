var documenterSearchIndex = {"docs":
[{"location":"macros.html","page":"Macros","title":"Macros","text":"CurrentModule = SimpleCaching","category":"page"},{"location":"macros.html#man-macros","page":"Macros","title":"Macros","text":"","category":"section"},{"location":"macros.html","page":"Macros","title":"Macros","text":"All the macros can be described as one:","category":"page"},{"location":"macros.html","page":"Macros","title":"Macros","text":"@scache[jld][_if condition] [[type] cache_dir] function_call","category":"page"},{"location":"macros.html","page":"Macros","title":"Macros","text":"when jld is specified right after @scache then JLD2 will be used instead of Serialization; when _if condition are specified right after @scache[jld] then the caching will be used only if condition is verified.","category":"page"},{"location":"macros.html","page":"Macros","title":"Macros","text":"For more details consult Caching and Conditional caching sections below.","category":"page"},{"location":"macros.html#man-macros-caching","page":"Macros","title":"Caching","text":"","category":"section"},{"location":"macros.html","page":"Macros","title":"Macros","text":"@scache\n@scachejld","category":"page"},{"location":"macros.html#SimpleCaching.@scache","page":"Macros","title":"SimpleCaching.@scache","text":"@scache [[type] cache_dir] function_call\n\nCache the result of function_call in directory cache_dir prefixing the saved file with type.\n\nThis macro uses Serialize serialize and deserialize functions to save and load cached files so it is faster and more memory efficent than @scachejld macro which uses JLD2 which, on the other hand, is more portable between different julia versions.\n\nnote: Note\nThe file extension will be .jld when using both @scache and @scachejld.\n\nnote: Note\nIf type is omitted the function name will be used as type.\n\nnote: Note\nIf cache_dir is omitted the value set in filed cache_dir in SimpleCachingSettings will be used.\n\nExamples\n\njulia> using SimpleCaching\n\njulia> SimpleCaching.settings.log = true;\n\njulia> @scache \"cute-cube\" \"./\" fill(0, 3, 3, 3)\n● [ 2022-12-09 15:39:42 ] Computing cute-cube...\n● [ 2022-12-09 15:39:42 ] Computed cute-cube in 0.009 seconds (00:00:00)\n● [ 2022-12-09 15:39:44 ] Saving cute-cube to file ./cute-cube_4bbf9c2851f2c2b3954448f1a8085f6e3d40085add71f19640343885a8b7bd6a.jld[.tmp]...\n3×3×3 Array{Int64, 3}:\n[:, :, 1] =\n 0  0  0\n 0  0  0\n 0  0  0\n\n[:, :, 2] =\n 0  0  0\n 0  0  0\n 0  0  0\n\n[:, :, 3] =\n 0  0  0\n 0  0  0\n 0  0  0\n\njulia> @scache \"cute-cube\" \"./\" fill(0, 3, 3, 3)\n● [ 2022-12-09 15:39:56 ] Loading cute-cube from file ./cute-cube_4bbf9c2851f2c2b3954448f1a8085f6e3d40085add71f19640343885a8b7bd6a.jld...\n3×3×3 Array{Int64, 3}:\n[:, :, 1] =\n 0  0  0\n 0  0  0\n 0  0  0\n\n[:, :, 2] =\n 0  0  0\n 0  0  0\n 0  0  0\n\n[:, :, 3] =\n 0  0  0\n 0  0  0\n 0  0  0\n\nshell> ls -l cute-cube_4bbf9c2851f2c2b3954448f1a8085f6e3d40085add71f19640343885a8b7bd6a.jld\n-rw-r--r--. 1 user user 232  9 dic 15.39 cute-cube_4bbf9c2851f2c2b3954448f1a8085f6e3d40085add71f19640343885a8b7bd6a.jld\n\n\nExpressions in function argument will be computed as first step so the cached file will be loaded even if the arguments are different but will evaluate to the same result.\n\njulia> @scache \"cute-cube\" \"./\" fill(0, 3, parse(Int, \"3\"), 3)\n● [ 2022-12-09 09:41:54 ] Loading cute-cube from file ./cute-cube_4bbf9c2851f2c2b3954448f1a8085f6e3d40085add71f19640343885a8b7bd6a.jld...\n3×3×3 Array{Int64, 3}:\n[:, :, 1] =\n 0  0  0\n 0  0  0\n 0  0  0\n\n[:, :, 2] =\n 0  0  0\n 0  0  0\n 0  0  0\n\n[:, :, 3] =\n 0  0  0\n 0  0  0\n 0  0  0\n\n\n\n\n\n\n","category":"macro"},{"location":"macros.html#SimpleCaching.@scachejld","page":"Macros","title":"SimpleCaching.@scachejld","text":"@scachejld [[type] cache_dir] function_call\n\nCache the result of function_call in directory cache_dir prefixing the saved file with type.\n\nThis macro uses JLD2 @save and @load macros to save and load cached files so it is slower and less memory efficent than @scache macro which uses serialize which, on the other hand, is less portable between different julia versions.\n\nnote: Note\nThe file extension will be .jld when using both @scache and @scachejld.\n\nnote: Note\nIf type is omitted the function name will be used as type.\n\nnote: Note\nIf cache_dir is omitted the value set in filed cache_dir in SimpleCachingSettings will be used.\n\nExamples\n\njulia> using SimpleCaching\n\njulia> SimpleCaching.settings.log = true;\n\njulia> @scachejld \"cute-cube\" \"./\" fill(0, 3, 3, 3)\n● [ 2022-12-09 15:56:09 ] Computing cute-cube...\n● [ 2022-12-09 15:56:09 ] Computed cute-cube in 0.0 seconds (00:00:00)\n● [ 2022-12-09 15:56:09 ] Saving cute-cube to file ./cute-cube_4bbf9c2851f2c2b3954448f1a8085f6e3d40085add71f19640343885a8b7bd6a.jld[.tmp]...\n3×3×3 Array{Int64, 3}:\n[:, :, 1] =\n 0  0  0\n 0  0  0\n 0  0  0\n\n[:, :, 2] =\n 0  0  0\n 0  0  0\n 0  0  0\n\n[:, :, 3] =\n 0  0  0\n 0  0  0\n 0  0  0\n\njulia> @scachejld \"cute-cube\" \"./\" fill(0, 3, 3, 3)\n● [ 2022-12-09 15:56:19 ] Loading cute-cube from file ./cute-cube_4bbf9c2851f2c2b3954448f1a8085f6e3d40085add71f19640343885a8b7bd6a.jld...\n3×3×3 Array{Int64, 3}:\n[:, :, 1] =\n 0  0  0\n 0  0  0\n 0  0  0\n\n[:, :, 2] =\n 0  0  0\n 0  0  0\n 0  0  0\n\n[:, :, 3] =\n 0  0  0\n 0  0  0\n 0  0  0\n\nshell> ls -l cute-cube_4bbf9c2851f2c2b3954448f1a8085f6e3d40085add71f19640343885a8b7bd6a.jld\n-rw-r--r--. 1 user user 1000  9 dic 15.56 cute-cube_4bbf9c2851f2c2b3954448f1a8085f6e3d40085add71f19640343885a8b7bd6a.jld\n\n\nExpressions in function argument will be computed as first step so the cached file will be loaded even if the arguments are different but will evaluate to the same result.\n\njulia> @scachejld \"cute-cube\" \"./\" fill(0, 3, round(Int64, 1.5 * 2), 3)\n● [ 2022-12-09 15:59:13 ] Loading cute-cube from file ./cute-cube_4bbf9c2851f2c2b3954448f1a8085f6e3d40085add71f19640343885a8b7bd6a.jld...\n3×3×3 Array{Int64, 3}:\n[:, :, 1] =\n 0  0  0\n 0  0  0\n 0  0  0\n\n[:, :, 2] =\n 0  0  0\n 0  0  0\n 0  0  0\n\n[:, :, 3] =\n 0  0  0\n 0  0  0\n 0  0  0\n\n\n\n\n\n\n","category":"macro"},{"location":"macros.html#man-macros-conditional-caching","page":"Macros","title":"Conditional caching","text":"","category":"section"},{"location":"macros.html","page":"Macros","title":"Macros","text":"@scache_if\n@scachejld_if","category":"page"},{"location":"macros.html#SimpleCaching.@scache_if","page":"Macros","title":"SimpleCaching.@scache_if","text":"@scache_if condition [[type] cache_dir] function_call\n\nCache the result of function_call only if condition is true.\n\nNote that will not be loaded the cached result even if present.\n\nFor other parameters docs see @scache.\n\nExamples\n\njulia> using SimpleCaching\n\njulia> SimpleCaching.settings.log = true;\n\njulia> @scache_if true \"cute-cube\" \"./\" fill(0, 3, 3, 3)\n● [ 2022-12-09 15:39:42 ] Computing cute-cube...\n● [ 2022-12-09 15:39:42 ] Computed cute-cube in 0.009 seconds (00:00:00)\n● [ 2022-12-09 15:39:44 ] Saving cute-cube to file ./cute-cube_4bbf9c2851f2c2b3954448f1a8085f6e3d40085add71f19640343885a8b7bd6a.jld[.tmp]...\n3×3×3 Array{Int64, 3}:\n[:, :, 1] =\n 0  0  0\n 0  0  0\n 0  0  0\n\n[:, :, 2] =\n 0  0  0\n 0  0  0\n 0  0  0\n\n[:, :, 3] =\n 0  0  0\n 0  0  0\n 0  0  0\n\njulia> @scache_if true \"cute-cube\" \"./\" fill(0, 3, 3, 3)\n● [ 2022-12-09 15:41:54 ] Loading cute-cube from file ./cute-cube_4bbf9c2851f2c2b3954448f1a8085f6e3d40085add71f19640343885a8b7bd6a.jld...\n3×3×3 Array{Int64, 3}:\n[:, :, 1] =\n 0  0  0\n 0  0  0\n 0  0  0\n\n[:, :, 2] =\n 0  0  0\n 0  0  0\n 0  0  0\n\n[:, :, 3] =\n 0  0  0\n 0  0  0\n 0  0  0\n\nshell> ls -lh cute-cube_4bbf9c2851f2c2b3954448f1a8085f6e3d40085add71f19640343885a8b7bd6a.jld\n-rw-r--r--. 1 user user 1000 9 dic 09.54 cute-cube_4bbf9c2851f2c2b3954448f1a8085f6e3d40085add71f19640343885a8b7bd6a.jld\n\n\nbut passing a false condition (note there is no loading log):\n\njulia> @scache_if false \"cute-cube\" \"./\" fill(0, 3, 3, 3)\n3×3×3 Array{Int64, 3}:\n[:, :, 1] =\n 0  0  0\n 0  0  0\n 0  0  0\n\n[:, :, 2] =\n 0  0  0\n 0  0  0\n 0  0  0\n\n[:, :, 3] =\n 0  0  0\n 0  0  0\n 0  0  0\n\n\n\n\n\n\n","category":"macro"},{"location":"macros.html#SimpleCaching.@scachejld_if","page":"Macros","title":"SimpleCaching.@scachejld_if","text":"@scachejld_if condition [[type] cache_dir] function_call\n\nCache the result of function_call only if condition is true.\n\nNote that will not be loaded the cached result even if present.\n\nFor other parameters docs see @scachejld.\n\nExamples\n\njulia> using SimpleCaching\n\njulia> SimpleCaching.settings.log = true;\n\njulia> @scachejld_if true \"cute-cube\" \"./\" fill(0, 3, 3, 3)\n● [ 2022-12-09 16:06:42 ] Computing cute-cube...\n● [ 2022-12-09 16:06:42 ] Computed cute-cube in 0.009 seconds (00:00:00)\n● [ 2022-12-09 16:06:44 ] Saving cute-cube to file ./cute-cube_4bbf9c2851f2c2b3954448f1a8085f6e3d40085add71f19640343885a8b7bd6a.jld[.tmp]...\n3×3×3 Array{Int64, 3}:\n[:, :, 1] =\n 0  0  0\n 0  0  0\n 0  0  0\n\n[:, :, 2] =\n 0  0  0\n 0  0  0\n 0  0  0\n\n[:, :, 3] =\n 0  0  0\n 0  0  0\n 0  0  0\n\njulia> @scachejld_if true \"cute-cube\" \"./\" fill(0, 3, 3, 3)\n● [ 2022-12-09 16:07:04 ] Loading cute-cube from file ./cute-cube_4bbf9c2851f2c2b3954448f1a8085f6e3d40085add71f19640343885a8b7bd6a.jld...\n3×3×3 Array{Int64, 3}:\n[:, :, 1] =\n 0  0  0\n 0  0  0\n 0  0  0\n\n[:, :, 2] =\n 0  0  0\n 0  0  0\n 0  0  0\n\n[:, :, 3] =\n 0  0  0\n 0  0  0\n 0  0  0\n\nshell> ls -lh cute-cube_4bbf9c2851f2c2b3954448f1a8085f6e3d40085add71f19640343885a8b7bd6a.jld\n-rw-r--r--. 1 user user 1000 9 dic 16.07 cute-cube_4bbf9c2851f2c2b3954448f1a8085f6e3d40085add71f19640343885a8b7bd6a.jld\n\n\nbut passing a false condition (note there is no loading log):\n\njulia> @scachejld_if false \"cute-cube\" \"./\" fill(0, 3, 3, 3)\n3×3×3 Array{Int64, 3}:\n[:, :, 1] =\n 0  0  0\n 0  0  0\n 0  0  0\n\n[:, :, 2] =\n 0  0  0\n 0  0  0\n 0  0  0\n\n[:, :, 3] =\n 0  0  0\n 0  0  0\n 0  0  0\n\n\n\n\n\n\n","category":"macro"},{"location":"index.html","page":"Home","title":"Home","text":"CurrentModule = SimpleCaching","category":"page"},{"location":"index.html#SimpleCaching","page":"Home","title":"SimpleCaching","text":"","category":"section"},{"location":"index.html","page":"Home","title":"Home","text":"","category":"page"},{"location":"index.html","page":"Home","title":"Home","text":"This package provides two macros used to cache result(s) of function calls.","category":"page"},{"location":"index.html","page":"Home","title":"Home","text":"The cached file will survive the julia session so it will be automatically loaded from the disk even after a restart of the julia session.","category":"page"},{"location":"index.html#Differences-with-other-packages","page":"Home","title":"Differences with other packages","text":"","category":"section"},{"location":"index.html","page":"Home","title":"Home","text":"Most packages that provide caching functionality offers macros that are strictly bounded to function definitions (e.g. Caching.jl)); this means that if, for example, a println is added to a function definition the cached file will not be loaded. To work around this problem, the macros exposed by this package only use the function name and the value of the parameters at the time of the call to determine if the result can be loaded from the cache, if any.","category":"page"},{"location":"index.html#Installation","page":"Home","title":"Installation","text":"","category":"section"},{"location":"index.html","page":"Home","title":"Home","text":"This packages is registered so you can install it executing the following commands in a Julia REPL to install it:","category":"page"},{"location":"index.html","page":"Home","title":"Home","text":"import Pkg\nPkg.add(\"SimpleCaching\")","category":"page"},{"location":"index.html","page":"Home","title":"Home","text":"or, to install the developement version, run:","category":"page"},{"location":"index.html","page":"Home","title":"Home","text":"import Pkg\nPkg.add(\"https://github.com/ferdiu/SimpleCaching.jl#dev\")","category":"page"},{"location":"index.html#Usage","page":"Home","title":"Usage","text":"","category":"section"},{"location":"index.html","page":"Home","title":"Home","text":"Start using the macros as follow:","category":"page"},{"location":"index.html","page":"Home","title":"Home","text":"julia> using SimpleCaching\n\njulia> SimpleCaching.settings.log = true; # log when saving/loading cache\n\njulia> @scache \"cute-cube\" \"./\" fill(0, 3, 3, 3)\n● [ 2022-12-09 15:39:42 ] Computing cute-cube...\n● [ 2022-12-09 15:39:42 ] Computed cute-cube in 0.009 seconds (00:00:00)\n● [ 2022-12-09 15:39:44 ] Saving cute-cube to file ./cute-cube_4bbf9c2851f2c2b3954448f1a8085f6e3d40085add71f19640343885a8b7bd6a.jld[.tmp]...\n3×3×3 Array{Int64, 3}:\n[:, :, 1] =\n 0  0  0\n 0  0  0\n 0  0  0\n\n[:, :, 2] =\n 0  0  0\n 0  0  0\n 0  0  0\n\n[:, :, 3] =\n 0  0  0\n 0  0  0\n 0  0  0\n","category":"page"},{"location":"index.html","page":"Home","title":"Home","text":"if the same function will be called again with the same parameters this will result in the cache to be loaded instead of performing the calculation again.","category":"page"},{"location":"index.html","page":"Home","title":"Home","text":"The cache is saved on the disk so it will be loaded even in subsequent julia sessions making these macros particularly useful whene executing long calculations inside cycles withing Julia scripts).","category":"page"},{"location":"index.html","page":"Home","title":"Home","text":"\njulia> @scache \"cute-cube\" \"./\" fill(0, 3, 3, 3)\n● [ 2022-12-09 15:39:56 ] Loading cute-cube from file ./cute-cube_4bbf9c2851f2c2b3954448f1a8085f6e3d40085add71f19640343885a8b7bd6a.jld...\n3×3×3 Array{Int64, 3}:\n[:, :, 1] =\n 0  0  0\n 0  0  0\n 0  0  0\n\n[:, :, 2] =\n 0  0  0\n 0  0  0\n 0  0  0\n\n[:, :, 3] =\n 0  0  0\n 0  0  0\n 0  0  0","category":"page"},{"location":"index.html","page":"Home","title":"Home","text":"See Macros section for more details on how to use them.","category":"page"},{"location":"index.html#Settings","page":"Home","title":"Settings","text":"","category":"section"},{"location":"index.html","page":"Home","title":"Home","text":"Some behaviour of the macros can be tweaked chaning the values of the settings:","category":"page"},{"location":"index.html","page":"Home","title":"Home","text":"SimpleCachingSettings","category":"page"},{"location":"index.html#SimpleCaching.SimpleCachingSettings","page":"Home","title":"SimpleCaching.SimpleCachingSettings","text":"SimpleCachingSettings is a struct containing settings for exported macros @scache and @scachefast.\n\nFields\n\nlog: a Bool indicating whether to log or not operations like computing, saving and   loading. Default is false.\nlog_output: a IO containing the file descriptor the log will be written to; ignored if   log is false. Default is stdout.\ndate_format: a String representing the format the DateTime will be printed when logging;   ignored if log is false. Default is \"yyyy-mm-dd HH:MM:SS\".\nline_started: a String that will be placed at the beginning of the log; ignored if log   is false. Default is \"● \".\ncreate_cache_record: a Bool indicating whether to create a tsv file containing human   readable informations about the saved file. Default is false;\ncache_dir: this is the default directory the cache will be saved in when not specified   in the macro call. Default is ./_sc_cache.\n\n\n\n\n\n","category":"type"}]
}
